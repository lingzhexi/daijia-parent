package com.stormling.daijia

import com.atguigu.daijia.model.form.rules.FeeRuleRequest;
import java.math.BigDecimal;

global com.atguigu.daijia.model.vo.rules.FeeRuleResponse feeRuleResponse;

/**
1.起步价
    00:00:00-07:00:00  19元(含3公里)
    07:00:00-24:00:00  19元(含5公里)
*/
rule "起步价 00:00:00-07:00:00 19元 （含3公里）"
    salience 10
    no-loop true
    when
        $rule:FeeRuleRequest(startTime >= "00:00:00" && startTime < "07:00:00")
    then
        feeRuleResponse.setBaseDistance(new BigDecimal("3.0"));
        feeRuleResponse.setBaseDistanceFee(new BigDecimal("19.0"));
        // 3公里内里程费为0
        feeRuleResponse.setExceedDistance(new BigDecimal("0.0"));
        feeRuleResponse.setExceedDistancePrice(new BigDecimal("4.0"));
        System.out.println("00:00:00-06:59:59 " + feeRuleResponse.getBaseDistance() + "公里，起步价:" + feeRuleResponse.getBaseDistanceFee() + "元");
end

rule "起步价 07:00:00-23:59:59 19元 （含5公里）"
    salience 10
    no-loop true
    when
        $rule:FeeRuleRequest(startTime >= "07:00:00" && startTime <= "23:59:59")
    then
        feeRuleResponse.setBaseDistance( new BigDecimal("5.0"));
        feeRuleResponse.setBaseDistanceFee(new BigDecimal("19.0"));
         // 5公里内里程费为0
        feeRuleResponse.setExceedDistance(new BigDecimal("0.0"));
        feeRuleResponse.setExceedDistancePrice(new BigDecimal("3.0"));
        System.out.println("07:00:00-23:59:59 " + feeRuleResponse.getBaseDistance() + "公里，起步价:" + feeRuleResponse.getBaseDistanceFee() + "元");
end

/**
2.里程费
    00:00:00-07:00:00  4元/1km
    07:00:00-24:00:00  3元/1km
*/
rule "里程费 00:00:00-07:00:00  4元/1km"
    salience 10
    no-loop true
    when
        $rule:FeeRuleRequest(startTime>= "00:00:00" && startTime < "07:00:00" && distance.doubleValue()>3.0)
    then
        // 超出的公里数  以及单价
        BigDecimal exceedDistance = $rule.getDistance().subtract(new BigDecimal("3.0"));
        feeRuleResponse.setExceedDistance(exceedDistance);
        feeRuleResponse.setExceedDistancePrice(new BigDecimal("4.0"));
        System.out.println("里程费，超出里程:" + feeRuleResponse.getExceedDistance() + "公里，单价：" + feeRuleResponse.getExceedDistancePrice());
end

rule "里程费 07:00:00-23:59:59  3元/1km"
    salience 10
    no-loop true
    when
        $rule:FeeRuleRequest(startTime >= "07:00:00" && startTime <= "23:59:59" && distance.doubleValue()>3.0)
    then
        // 超出的公里数  以及单价
        BigDecimal exceedDistance = $rule.getDistance().subtract(new BigDecimal("3.0"));
        feeRuleResponse.setExceedDistance(exceedDistance);
        feeRuleResponse.setExceedDistancePrice(new BigDecimal("4.0"));
        System.out.println("里程费，超出里程:" + feeRuleResponse.getExceedDistance() + "公里，单价：" + feeRuleResponse.getExceedDistancePrice());
end

/**
 * 3.等候费:   10分钟后   超出:1元/min
 */
rule "等候费 10分钟内免费 超过收取 1元/1分钟 "
    salience 10
    no-loop true
    when
        $rule:FeeRuleRequest(waitMinute > 10)
    then
        int exceedWaitMinute = $rule.getWaitMinute()-10;
        feeRuleResponse.setBaseWaitMinute(10);
        feeRuleResponse.setExceedWaitMinute(exceedWaitMinute);
        feeRuleResponse.setExceedWaitMinutePrice(new BigDecimal("1.0"));
        System.out.println("等候费：超过10分钟后每分钟" + feeRuleResponse.getExceedWaitMinutePrice());
end

rule "无等候费"
    salience 10
    no-loop true
    when
        $rule:FeeRuleRequest(waitMinute <= 10)
    then
        feeRuleResponse.setBaseWaitMinute(10);
        feeRuleResponse.setExceedWaitMinute(0);
        feeRuleResponse.setExceedWaitMinutePrice(new BigDecimal("1.0"));
        System.out.println("等候费：无");
end

/**
 * 4.远途费: 超过12公里 1元/1km
 */
rule "远途费 行程12公里免费 超过 1元/1km"
    salience 10
    no-loop true
    when
        $rule:FeeRuleRequest(distance.doubleValue() > 12.0)
    then
        BigDecimal exceedLongDistance = $rule.getDistance().subtract(new BigDecimal("12.0"));
        feeRuleResponse.setBaseLongDistance(new BigDecimal("12.0"));
        feeRuleResponse.setExceedLongDistance(exceedLongDistance);
        feeRuleResponse.setExceedLongDistancePrice(new BigDecimal("1.0"));
        System.out.println("远途费:基础12公里,超过收取:"+feeRuleResponse.getExceedLongDistancePrice()+"每公里");
end

rule "无远途费"
    salience 10
    no-loop true
    when
        $rule:FeeRuleRequest(distance.doubleValue() <= 12.0)
    then
        feeRuleResponse.setBaseLongDistance(new BigDecimal("12.0"));
        feeRuleResponse.setExceedLongDistance(new BigDecimal("0"));
        feeRuleResponse.setExceedLongDistancePrice(new BigDecimal("0"));
        System.out.println("远途费用:无");
end

/**
   5.计算总金额
        订单总金额 = 基础里程费 + 超出基础里程的费 + 等候费 + 远程费
*/
rule "总金额"
    salience 10
    no-loop true
    when
        $rule:FeeRuleRequest(distance.doubleValue()>0.0)
    then
       //订单总金额 = 基础里程费 + 超出基础里程的费 + 等候费 + 远程费
       BigDecimal distanceFee = feeRuleResponse.getBaseDistanceFee().add(feeRuleResponse.getExceedDistance().multiply(feeRuleResponse.getExceedDistancePrice()));
       BigDecimal waitFee = new BigDecimal(feeRuleResponse.getExceedWaitMinute()).multiply(feeRuleResponse.getExceedWaitMinutePrice());
       BigDecimal longDistanceFee = feeRuleResponse.getExceedLongDistance().multiply(feeRuleResponse.getExceedLongDistancePrice());
       BigDecimal totalAmount = distanceFee.add(waitFee).add(longDistanceFee);

       feeRuleResponse.setDistanceFee(distanceFee);
       feeRuleResponse.setWaitFee(waitFee);
       feeRuleResponse.setLongDistanceFee(longDistanceFee);
       feeRuleResponse.setTotalAmount(totalAmount);
       System.out.println("计算总金额:" + feeRuleResponse.getTotalAmount() + "元");
end
